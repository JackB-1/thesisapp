apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '..'
    // root = file("../")
    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native
    // reactNativeDir = file("../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen
    // codegenDir = file("../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js
    // cliFile = file("../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.dippa2"
    defaultConfig {
        applicationId "com.dippa2"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    sourceSets {
            main {
                assets.srcDirs = ['src/main/assets']
            }
    }
    /* configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'com.facebook.fbjni') {
                details.useTarget group: 'com.facebook.fbjni', name: 'fbjni-java-only', version: '0.2.2'
                details.because 'Prefer fbjni-java-only to avoid duplicate classes'
            }
        }
    }
    } */
    configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'com.facebook.fbjni') {
                details.useTarget group: 'com.facebook.fbjni', name: 'fbjni-java-only', version: '0.0.3'
                details.because 'Prefer fbjni-java-only to avoid duplicate classes'
            }
        }
    }
    }
    lintOptions {
            baseline file("lint-baseline.xml")
    }
    
    /* configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'com.facebook.fbjni') {
            details.useTarget group: 'com.facebook.fbjni', name: 'fbjni-java-only', version: '0.2.2'
            details.because 'Prefer fbjni-java-only to avoid duplicate classes'
        }
    }
    } */
    
    /* configurations.all {
        resolutionStrategy {
            eachDependency { DependencyResolveDetails details ->
                if (details.requested.group == 'com.facebook.fbjni') {
                    details.useTarget group: 'com.facebook.fbjni', name: 'fbjni-java-only', version: '0.2.2'
                    details.because 'Prefer fbjni-java-only to avoid duplicate classes'
                }
            }
        }
    } */
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android"){
       exclude group: 'com.facebook.fbjni', module: 'fbjni'
   }
    implementation("com.facebook.react:flipper-integration:0.73.0"){
       exclude group: 'com.facebook.fbjni', module: 'fbjni'
   }

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android"){
            exclude group: 'com.facebook.fbjni', module: 'fbjni'
        }
    } else {
        implementation jscFlavor
    }

    // AndroidX GridLayout
    implementation 'androidx.gridlayout:gridlayout:1.0.0'

    // Movesense .aar lib
    implementation files('lib/mdslib-3.15.0(1)-release.aar')

    // RxAndroidBle
    implementation "com.polidea.rxandroidble2:rxandroidble:1.10.2"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'

    // GSON
    implementation 'com.google.code.gson:gson:2.8.0'

    // PyTorch dependencies
    // implementation 'org.pytorch:pytorch_android:1.10.0'
    implementation 'org.pytorch:pytorch_android_lite:1.10.0'
    implementation 'org.pytorch:pytorch_android_torchvision_lite:1.10.0'
    // implementation 'org.pytorch:pytorch_android:1.9.0' //crash
    // implementation 'org.pytorch:pytorch_android_torchvision:1.9.0'
    // implementation('org.pytorch:pytorch_android_lite:2.1.0') {
    //     exclude group:'com.facebook.fbjni', module: 'fbjni-java-only'
    // }
    //implementation 'org.pytorch:pytorch_android_torchvision:1.10.0'

    def appcompat_version = "1.6.1"
	implementation "androidx.appcompat:appcompat:$appcompat_version"
	implementation "androidx.constraintlayout:constraintlayout:2.2.0-alpha09"
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    testImplementation 'junit:junit:4.12'

    // testing dependencies

    

}


apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
